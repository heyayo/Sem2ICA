cmake_minimum_required(VERSION 3.0.0)
project(Angular VERSION 1.0.0)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if (UNIX)
	set(CMAKE_EXE_LINKER_FLAGS "-lGL -lGLU -lGLEW -lglfw")
	set(CMAKE_CXX_FLAGS "-Wno-deprecated")
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR})
	set(CMAKE_CXX_STANDARD 14)
endif (UNIX)
if (WIN32)
	add_definitions(-DGLEW_STATIC)
	find_package(OpenGL REQUIRED)
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR})
	set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR})
endif (WIN32)

add_subdirectory(Common)
set(SOURCE Application.cpp Camera.cpp GameObject.cpp LoadTGA.cpp Mesh.cpp Scene1.cpp shader.cpp MeshBuilder.cpp)

add_executable(AngularVelocity main.cpp ${SOURCE})

target_include_directories(AngularVelocity PUBLIC ${CMAKE_SOURCE_DIR}/Common/)
target_include_directories(AngularVelocity PUBLIC ${CMAKE_SOURCE_DIR}/glew/include/)
target_include_directories(AngularVelocity PUBLIC ${CMAKE_SOURCE_DIR}/glfw/include/)
target_link_libraries(AngularVelocity PUBLIC CommonLibrary)
if (WIN32)
	target_link_libraries(FMP PUBLIC ${CMAKE_SOURCE_DIR}/glew/lib/glew32s.lib)
	target_link_libraries(FMP PUBLIC ${CMAKE_SOURCE_DIR}/glfw/lib/glfw3.lib)
	target_link_libraries(FMP PUBLIC ${OPENGL_LIBRARIES})
endif (WIN32)
